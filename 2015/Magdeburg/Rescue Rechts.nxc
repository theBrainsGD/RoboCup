#include "HTSMUX-driver.h"


/*
  Lichtsensor Links auﬂen =  Sensor 1
  Lichtsensor Links innen = Multiplexer Sensor 3
  Lichtsensor Rechts innen = Multiplexer Sensor 2
  Lichtsensor Rechts auﬂen =  Sensor 4
*/


#define M             OUT_BC
#define MR            OUT_B                                                     //Motoren
#define ML            OUT_C

#define LRA           msensor_S3_4                                              //Multiplexersensoren
#define LRI           msensor_S3_3
#define LLI           msensor_S3_2
#define LLA           msensor_S3_1


#define TS            IN_2
#define MP            IN_3                                                      //NXT-Sensoren


#define Speed         60
#define Kurve         50
#define VLSchnell     70
#define VLStandard    50                                                        //andere Konastanten
#define VRSchnell     70
#define VRStandard    50
#define Kreuzung      60
#define Standard      70

#define SchwelleLA 40
#define SchwelleLI 40
#define SchwelleRA 40
#define SchwelleRI 40



#define MS  smuxSensorLegoLightNorm


bool Pacours = false ;
bool Rescue = true ;

int Silber = 50;













task main (){                                                                   // task main Anfang

 SetSensorTouch(IN_2);                                                          //Drucksensor
 SetSensorLight(IN_4);                                                          //LichtSensorrechtsauﬂen
 SetSensorLight(IN_1);                                                          //LichtSensorlinksauﬂen
 
 SetSensor(MP, SENSOR_LOWSPEED);                                                 //Multiplexer ansteuern anfang

 if(HTSMUXscanPorts(MP) <> true){
  TextOut(0, LCD_LINE5, "Fehler: Multiplexer");
  Wait(1000);
  ClearScreen();
  Off(M);
  Wait(100000);
 }

 smuxSetSensorLegoLight(msensor_S3_2, true);                                    //rechts innen
 smuxSetSensorLegoLight(msensor_S3_3, true);                                    //links innen
 smuxSetSensorLegoLight(msensor_S3_4, true);                                    //Oben


 while(Pacours){                                                                //while pacours anfang
 
 
   if(Sensor(IN_1) < SchwelleLA && smuxSensorLegoLightNorm(msensor_S3_3) < SchwelleRI){
   ClearScreen();
   TextOut(0,LCD_LINE1,"Kreuzung RI LA");
   RotateMotor(M, Kreuzung, 150);
   OnFwd(ML, 50);
   OnRev(MR,50);
   Wait(2500);
   RotateMotor(M,50, 50);
   until(Sensor(IN_4) < SchwelleRA || smuxSensorLegoLightNorm(msensor_S3_2) < SchwelleRI){
    OnFwd(MR,Kurve);
    OnRev(ML,Kurve);
    ClearScreen();
   }
  }

  if(smuxSensorLegoLightNorm(msensor_S3_2) < SchwelleLI && Sensor(IN_4) < SchwelleRA){
   ClearScreen();
   TextOut(0,LCD_LINE1,"Kreuzung LI RA");
   RotateMotor(M, Kreuzung, 150);
   OnFwd(ML, 50);
   OnRev(MR,50);
   Wait(2500);
   RotateMotor(M,50, 50);
   until(Sensor(IN_4) < SchwelleRA || smuxSensorLegoLightNorm(msensor_S3_2) < SchwelleRI){
    OnFwd(MR,Kurve);
    OnRev(ML,Kurve);
    ClearScreen();
   }
  }
 
  if(Sensor(IN_4) < SchwelleLA){
   OnFwd(OUT_C, 65);
   OnRev(OUT_B,65);
   Wait(200);
  }
  else{
   OnFwd(OUT_BC, Standard);
   ClearScreen();
  }



  if(Sensor(IN_1) < SchwelleRA){
   OnFwd(OUT_B, 65);
   OnRev(OUT_C,65);
   Wait(200);
  }
  else{
   OnFwd(OUT_BC,Standard);
   ClearScreen();
  }
 
 
 

 
 
  if(smuxSensorLegoLightNorm(msensor_S3_2) < SchwelleRI){
   OnFwd(OUT_C, 70);
   OnRev(OUT_B,70);
   Wait(150);
  }
  else{
   OnFwd(OUT_BC,Standard);
   ClearScreen();
  }
   

  if(smuxSensorLegoLightNorm(msensor_S3_3) < SchwelleLI){
   OnFwd(OUT_B, 50);
   OnRev(OUT_C,50);
   Wait(150);
  }
  else{
   OnFwd(OUT_BC, Standard);
   ClearScreen();
  }




 
 
 
 
  if(Sensor(TS) == 1){
   ClearScreen();
   TextOut(0,LCD_LINE3,"Dose");
   RotateMotor(M,70, -270);
   RotateMotor(MR,70,430);
   RotateMotor(ML,70,-430);
   RotateMotor(M,70,750);
   RotateMotor(MR,70,-450);
   RotateMotor(ML,70,450);
   RotateMotor(M,70,750);
   RotateMotor(MR,70,-180);
   RotateMotor(ML,70,180);
   until((Sensor(IN_1) < SchwelleLA) || (smuxSensorLegoLightNorm(msensor_S3_3) < SchwelleLI)){
    OnFwd(OUT_BC,Speed);
   }
   ClearScreen();
  }
  else{
   OnFwd(OUT_BC,Standard);
   ClearScreen();
  }
  
  if(((Sensor(IN_1) >= 55)  && (Sensor(IN_1) <= 57)) &&
     ((smuxSensorLegoLightNorm(msensor_S3_2) <= 61)  && (smuxSensorLegoLightNorm(msensor_S3_2) >= 59))){
  Rescue = false;
  Pacours = true;
  }
  
  }                                                                             //while pacours anfang
  
  
  
  while(Rescue){                                                                //while Rescue anfang
  
    while(Sensor(IN_4) < Silber){
    until(Sensor(TS) == 1){
     OnFwd(M,50);
    }
     RotateMotor(MR,50, -300);
     RotateMotor(ML, 50, 300);
     }
     if(Sensor(IN_4) > Silber){
    Off(M);
     }
  }                                                                             //while Rescue Ende
   


}                                                                               // task main() Ende




/* rest


     /*&&(smuxSensorLegoLightNorm(msensor_S3_3) < 55) && (smuxSensorLegoLightNorm(msensor_S3_4) < 55)

  while(smuxSensorLegoLightNorm(msensor_S3_1) > 55){

  }

  }




